Programming Assignment 2: Lexical Scoping -- Sample Run

> simpleM1 <- matrix(c(3,2,0,0,0,1,2,-2,1),nrow=3, ncol=3)
> 
> specialM1 <- makeCacheMatrix(simpleM1)
> 
> specialM1$get()
     [,1] [,2] [,3]
[1,]    3    0    2
[2,]    2    0   -2
[3,]    0    1    1
> 
> cacheSolve(specialM1)
     [,1] [,2] [,3]
[1,]  0.2  0.2    0
[2,] -0.2  0.3    1
[3,]  0.2 -0.3    0
> 
> cacheSolve(specialM1)
getting cached data
     [,1] [,2] [,3]
[1,]  0.2  0.2    0
[2,] -0.2  0.3    1
[3,]  0.2 -0.3    0
> 
> simpleM2 <- matrix(rnorm(25),c(5,5))
> 
> specialM1$set(simpleM2)
> 
> specialM1$get()
           [,1]       [,2]       [,3]       [,4]       [,5]
[1,]  0.9676931  1.1059467 -1.5774820 -1.1644206 -0.6760879
[2,]  0.4489354 -0.2643306  0.8301308  2.4819067 -0.7772901
[3,]  1.2299237 -0.8633672 -0.8134194 -1.3951764  0.7720259
[4,]  1.3734713 -0.5290221 -0.9865443 -1.8365107 -1.3308552
[5,] -0.2928150 -2.0387251  1.2380461  0.2022758 -0.1043349
> 
> cacheSolve(specialM1)
           [,1]          [,2]        [,3]       [,4]       [,5]
[1,] -3.0838723  0.3757693048  0.49463165  1.8225722 -2.4040295
[2,] -2.7729828 -0.0198931739 -0.09884933  1.5473567 -2.3518401
[3,] -5.6681730  0.0002817381 -0.01424116  3.1762638 -3.8930163
[4,]  1.9709336  0.3188133498  0.05603194 -1.2592907  1.3308767
[5,] -0.5983956 -0.0444449499  0.48299929 -0.1023096 -0.4968434
> 
> cacheSolve(specialM1)
getting cached data
           [,1]          [,2]        [,3]       [,4]       [,5]
[1,] -3.0838723  0.3757693048  0.49463165  1.8225722 -2.4040295
[2,] -2.7729828 -0.0198931739 -0.09884933  1.5473567 -2.3518401
[3,] -5.6681730  0.0002817381 -0.01424116  3.1762638 -3.8930163
[4,]  1.9709336  0.3188133498  0.05603194 -1.2592907  1.3308767
[5,] -0.5983956 -0.0444449499  0.48299929 -0.1023096 -0.4968434
> 
> specialM1$set(matrix(c(1,0,0,0,  0,1,0,0,  0,0,1,0  ,0,0,0,1), nrow=4, ncol=4))
> 
> specialM1$get()
     [,1] [,2] [,3] [,4]
[1,]    1    0    0    0
[2,]    0    1    0    0
[3,]    0    0    1    0
[4,]    0    0    0    1
> 
> cacheSolve(specialM1)
     [,1] [,2] [,3] [,4]
[1,]    1    0    0    0
[2,]    0    1    0    0
[3,]    0    0    1    0
[4,]    0    0    0    1
> 
> cacheSolve(specialM1)
getting cached data
     [,1] [,2] [,3] [,4]
[1,]    1    0    0    0
[2,]    0    1    0    0
[3,]    0    0    1    0
[4,]    0    0    0    1
> 